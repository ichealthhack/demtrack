function TabDemo
%   This function creates a figure with multiple Tabs.
%   The number of tabs can be changed and they are distributed evenly
%   across the top of the figure.  Content is provided for the first 5 tabs
%   to demo the program.  The demo uses the screen size to adjust the size
%   of the figure.  The program uses the ~ character for unused arguments,
%   so if you are not using 2009b, these should be changed to dummy
%   arguments (lines 209 and 233). guidata is set to the TabHandles cell
%   array and is used to pass all arguments and data to the functions.

%%   Set up some varables
%   First clear everything
        clear all
        clc
RESULTS = [];
 score=0;  
 COLOUR={'Green','Blue','Red','Yellow'};
ColW={'Yellow','White','Black','Blue'};
COLOUR=COLOUR';
colour = { [0 1 0],
            [0 0 1],
           [1 0 0],
           [1 1 0]};
%   Set Number of tabs and tab labels.  Make sure the number of tab labels
%   match the HumberOfTabs setting.
        NumberOfTabs = 11;               % Number of tabs to be generated
        TabLabels = {'Intro'; 'Main Menu'; 'Words'; 'Numbers'; 'Animal'; 'Check Words'; 'Check Numbers'; 'Performance'; 'Games'; 'Colour'; 'Result'};
        if size(TabLabels,1) ~= NumberOfTabs
            errordlg('Number of tabs and tab labels must be the same','Setup Error');
            return
        end
        
%   Get user screen size
        SC = get(0, 'ScreenSize');
        MaxMonitorX = SC(3);
        MaxMonitorY = SC(4);
        
 %   Set the figure window size values
        MainFigScale = .6;          % Change this value to adjust the figure size
        MaxWindowX = round(MaxMonitorX*MainFigScale);
        MaxWindowY = round(MaxMonitorY*MainFigScale);
        XBorder = (MaxMonitorX-MaxWindowX)/2;
        YBorder = (MaxMonitorY-MaxWindowY)/2; 
        TabOffset = 0;              % This value offsets the tabs inside the figure.
        ButtonHeight = 40;
        PanelWidth = MaxWindowX-2*TabOffset+4;
        PanelHeight = MaxWindowY-ButtonHeight-2*TabOffset;
        ButtonWidth = round((PanelWidth-NumberOfTabs)/NumberOfTabs);
                
 %   Set the color varables.  
        White = [1  1  1];            % White - Selected tab color     
        BGColor = .9*White;           % Light Grey - Background color
            
%%   Create a figure for the tabs
        hTabFig = figure(...
            'Units', 'pixels',...
            'Toolbar', 'none',...
            'Position',[ XBorder, YBorder, MaxWindowX, MaxWindowY ],...
            'NumberTitle', 'off',...
            'Name', 'Tab Demo',...
            'MenuBar', 'none',...
            'Resize', 'off',...
            'DockControls', 'off',...
            'Color', White);
    
%%   Define a cell array for panel and pushbutton handles, pushbuttons labels and other data
    %   rows are for each tab + two additional rows for other data
    %   columns are uipanel handles, selection pushbutton handles, and tab label strings - 3 columns.
            TabHandles = cell(NumberOfTabs,3);
            TabHandles(:,3) = TabLabels(:,1);
    %   Add additional rows for other data
            TabHandles{NumberOfTabs+1,1} = hTabFig;         % Main figure handle
            TabHandles{NumberOfTabs+1,2} = PanelWidth;      % Width of tab panel
            TabHandles{NumberOfTabs+1,3} = PanelHeight;     % Height of tab panel
            TabHandles{NumberOfTabs+2,1} = 0;               % Handle to default tab 2 content(set later)
            TabHandles{NumberOfTabs+2,2} = White;           % Selected tab Color
            TabHandles{NumberOfTabs+2,3} = BGColor;         % Background color
            
%%   Build the Tabs
        for TabNumber = 1:NumberOfTabs
        % create a UIPanel   
            TabHandles{TabNumber,1} = uipanel('Units', 'pixels', ...
                'Visible', 'off', ...
                'Backgroundcolor', White, ...
                'BorderWidth',1, ...
                'Position', [TabOffset TabOffset ...
                PanelWidth PanelHeight]);

        % create a selection pushbutton
            TabHandles{TabNumber,2} = uicontrol('Style', 'pushbutton',...
                'Units', 'pixels', ...
                'BackgroundColor', BGColor, ...
                'Position', [TabOffset+(TabNumber-1)*ButtonWidth PanelHeight+TabOffset...
                    ButtonWidth ButtonHeight], ...          
                'String', TabHandles{TabNumber,3},...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 10);

        end

%%   Define the callbacks for the Tab Buttons
%   All callbacks go to the same function with the additional argument being the Tab number
        for CountTabs = 1:NumberOfTabs
            set(TabHandles{CountTabs,2}, 'callback', ...
                {@TabSellectCallback, CountTabs});
        end

%%   Define content for the Open Image File Tab
    %   Open Image Pushbutton
%         uicontrol('Parent', TabHandles{1,1}, ...
%             'Units', 'pixels', ...
%             'Position', [round(PanelWidth/2)-100 2*ButtonHeight 200 ButtonHeight], ...
%             'String', 'Open Image File', ...
%             'Callback', @OpenImageCallback , ...
%             'Style', 'pushbutton',...
%             'HorizontalAlignment', 'center',...
%             'FontName', 'arial',...
%             'FontWeight', 'bold',...
%             'FontSize', 12);
%%%%MIRE
%% INTRO
        uicontrol('Parent', TabHandles{1,1}, ...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 2*ButtonHeight 200 ButtonHeight], ...
                'String', 'BEGIN', ...
                'Callback', @GoNextTab, ...
                'Style', 'pushbutton',...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
            
        Intro = {'Welcome to DemTrack!'; ...
            'Are you ready to start?'; ...
            'Press the BEGIN button to start playing'};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 3*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/2) ],...
            'Parent', TabHandles{1,1}, ...
            'string', Intro,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);

%% MAIN MENU
        uicontrol('parent', TabHandles{2,1}, ...
                'Style', 'pushbutton',...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 6*ButtonHeight 200 1.5*ButtonHeight], ...
                'String', 'Tracking Test', ...
                'Callback', @GoNextTab2, ...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
        
        uicontrol('parent', TabHandles{2,1}, ...
            'Style', 'pushbutton',...
            'Units', 'pixels', ...
            'Position', [round(PanelWidth/2)-100 4*ButtonHeight 200 1.5*ButtonHeight], ...
            'String', 'Let''s Play!', ...
            'Callback', @GoEndTab, ...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 12);
 
    %   Build the text for the first tab
        Intro = {'What do you want to do today?'};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 9*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/8) ],...
            'Parent', TabHandles{2,1}, ...
            'string', Intro,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);
%         
%% WORDS
        uicontrol('Parent', TabHandles{3,1}, ...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 2*ButtonHeight 200 ButtonHeight], ...
                'String', 'Next', ...
                'Callback', @GoNextTab1, ...
                'Style', 'pushbutton',...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
 
    %   Build the text for the first tab
        Intro = {'Memorise these words';...
            ' ';...
            'Elephant';...
            'Cat';...
            'Carrot';...         
            'Button';};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 3*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/2) ],...
            'Parent', TabHandles{3,1}, ...
            'string', Intro,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);

%% NUMBERS

  uicontrol('Parent', TabHandles{4,1}, ...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 2*ButtonHeight 200 ButtonHeight], ...
                'String', 'Next', ...
                'Callback', @GoNextTab3 , ...
                'Style', 'pushbutton',...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
 
    %   Build the text for the first tab
        Numbers = {'Memorise the following sequence of numbers';...
            '2 4 6 8 10'};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 3*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/2) ],...
            'Parent', TabHandles{4,1}, ...
            'string', Numbers,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);
        
%% ANIMALS

uicontrol('Parent', TabHandles{5,1}, ...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 1.5*ButtonHeight 200 ButtonHeight], ...
                'String', 'Next', ...
                'Callback', @ansbe4nexttab, ...
                'Style', 'pushbutton',...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
 
    %   Build the text for the first tab
        Intro = {'What''s the name of this animal?'};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 8*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/8) ],...
            'Parent', TabHandles{5,1}, ...
            'string', Intro,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);
        
tiger_image = imread('tiger.jpg');        
hImageAxes = axes('Parent', TabHandles{5,1}, ...
            'Units', 'pixels', ...
            'Position', [round(PanelWidth/2)+100 PanelHeight/4 ...
                200 200]);
image(tiger_image,'Parent', hImageAxes);
axis off

c(1) = uicontrol('style','checkbox','Parent',TabHandles{5,1},'units','pixels',...
        'position',[round(PanelWidth/4),round(PanelHeight/2),round(PanelWidth/4),15],'string','Cat',  'FontName', 'arial',...
    'FontWeight', 'bold',...
    'FontSize', 14);
c(2) = uicontrol('style','checkbox','Parent',TabHandles{5,1},'units','pixels',...
        'position',[round(PanelWidth/4),round(PanelHeight/2)-20,round(PanelWidth/4),15],'string','Tiger', 'FontName', 'arial',...
    'FontWeight', 'bold',...
    'FontSize', 14);  
c(3) = uicontrol('style','checkbox','Parent',TabHandles{5,1},'units','pixels',...
    'position',[round(PanelWidth/4),round(PanelHeight/2)-40,round(PanelWidth/4),15],'string','Lion', 'FontName', 'arial',...
'FontWeight', 'bold',...
'FontSize', 14); 

ANS= uicontrol('Style', 'text',...
        'Position', [200,5,round(PanelWidth/2),20],...
        'Parent', TabHandles{5,1}, ...
        'string', '',...
        'BackgroundColor', White,...
        'HorizontalAlignment', 'center',...
        'FontName', 'arial',...
        'FontWeight', 'bold',...
        'FontSize', 14);
qnum = 1;

function ansbe4nexttab(varargin)
     vals = get(c,'Value');
     checked = find([vals{:}]);
     if isempty(checked)
        answ= 'Please, select one option before clicking Next'; 
        set(ANS, 'string', answ);
     else
         if length(checked)>1
            answ= 'Please, select ONLY one option. Try again.';
               set(ANS, 'string', answ);
         else
             if checked==2
                 RESULTS(qnum)=1%RIGHT
                 %answ='CORRECT';
             elseif (checked==1)||(checked==3)
                 %answ='FALSE';
                 RESULTS(qnum)=0%WRONG
             end

%               tabnum=3;
          qnum=2; %next question number
          TabSellectCallback(0,0,6);

         end

     end

end

%% CHECK WORDS

uicontrol('Parent', TabHandles{6,1}, ...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 1.5*ButtonHeight 200 ButtonHeight], ...
                'String', 'Next', ...
                'Callback', @ansbe4nexttab2, ...
                'Style', 'pushbutton',...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
 
    %   Build the text for the first tab
        Intro = {'Before you memorised some words. Do you remember them?'};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 8*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/8) ],...
            'Parent', TabHandles{6,1}, ...
            'string', Intro,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);

c1(1) = uicontrol('style','checkbox','Parent',TabHandles{6,1},'units','pixels',...
        'position',[round(PanelWidth/4),round(PanelHeight/2),round(PanelWidth/2),15],'string','Cat   Lion   Elephant   Button',  'FontName', 'arial',...
    'FontWeight', 'bold',...
    'FontSize', 14);
c1(2) = uicontrol('style','checkbox','Parent',TabHandles{6,1},'units','pixels',...
        'position',[round(PanelWidth/4),round(PanelHeight/2)-20,round(PanelWidth/2),15],'string','Carrot   Cat   Elephant   Button', 'FontName', 'arial',...
    'FontWeight', 'bold',...
    'FontSize', 14);  
c1(3) = uicontrol('style','checkbox','Parent',TabHandles{6,1},'units','pixels',...
    'position',[round(PanelWidth/4),round(PanelHeight/2)-40,round(PanelWidth/2),15],'string','Elephant   Carrot   Lion   Button', 'FontName', 'arial',...
'FontWeight', 'bold',...
'FontSize', 14); 

ANS1= uicontrol('Style', 'text',...
        'Position', [200,5,round(PanelWidth/2),20],...
        'Parent', TabHandles{6,1}, ...
        'string', '',...
        'BackgroundColor', White,...
        'HorizontalAlignment', 'center',...
        'FontName', 'arial',...
        'FontWeight', 'bold',...
        'FontSize', 14);

function ansbe4nexttab2(varargin)
     vals = get(c1,'Value');
     checked = find([vals{:}]);
     if isempty(checked)
        answ= 'Please, select one option before clicking Next'; 
        set(ANS1, 'string', answ);
     else
         if length(checked)>1
            answ= 'Please, select ONLY one option. Try again.';
               set(ANS1, 'string', answ);
         else
             if checked==2
                 RESULTS(qnum)=1%RIGHT
                 %answ='CORRECT';
             elseif (checked==1)||(checked==3)
                 %answ='FALSE';
                 RESULTS(qnum)=0%WRONG
             end

%               tabnum=3;
          qnum = 3;
          TabSellectCallback(0,0,7);

         end

     end

end

%% CHECK NUMBERS

uicontrol('Parent', TabHandles{7,1}, ...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 1.5*ButtonHeight 200 ButtonHeight], ...
                'String', 'Next', ...
                'Callback', @ansbe4nexttab3, ...
                'Style', 'pushbutton',...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
 
    %   Build the text for the first tab
        Intro = {'And now, which sequence of numbers is equal to the one you saw before?'};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 8*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/8) ],...
            'Parent', TabHandles{7,1}, ...
            'string', Intro,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);
        
c2(1) = uicontrol('style','checkbox','Parent',TabHandles{7,1},'units','pixels',...
        'position',[round(PanelWidth/4),round(PanelHeight/2),round(PanelWidth/2),15],'string','2  6  6  8  10',  'FontName', 'arial',...
    'FontWeight', 'bold',...
    'FontSize', 14);
c2(2) = uicontrol('style','checkbox','Parent',TabHandles{7,1},'units','pixels',...
        'position',[round(PanelWidth/4),round(PanelHeight/2)-20,round(PanelWidth/2),15],'string','2  4  6  8  10', 'FontName', 'arial',...
    'FontWeight', 'bold',...
    'FontSize', 14);  
c2(3) = uicontrol('style','checkbox','Parent',TabHandles{7,1},'units','pixels',...
    'position',[round(PanelWidth/4),round(PanelHeight/2)-40,round(PanelWidth/2),15],'string','12  4  6  8  10', 'FontName', 'arial',...
'FontWeight', 'bold',...
'FontSize', 14); 

ANS2= uicontrol('Style', 'text',...
        'Position', [200,5,round(PanelWidth/2),20],...
        'Parent', TabHandles{7,1}, ...
        'string', '',...
        'BackgroundColor', White,...
        'HorizontalAlignment', 'center',...
        'FontName', 'arial',...
        'FontWeight', 'bold',...
        'FontSize', 14);

function ansbe4nexttab3(varargin)
     vals = get(c2,'Value');
     checked = find([vals{:}]);
     if isempty(checked)
        answ= 'Please, select one option before clicking Next'; 
        set(ANS2, 'string', answ);
     else
         if length(checked)>1
            answ= 'Please, select ONLY one option. Try again.';
               set(ANS2, 'string', answ);
         else
             if checked==2
                 RESULTS(qnum)=1%RIGHT
                 %answ='CORRECT';
             elseif (checked==1)||(checked==3)
                 %answ='FALSE';
                 RESULTS(qnum)=0%WRONG
             end

%               tabnum=3;
          qnum=4; %next question number
          TabSellectCallback(0,0,8);

         end

     end

end

%% Performance and Results

uicontrol('Parent', TabHandles{8,1}, ...
            'Units', 'pixels', ...
            'Position', [round(PanelWidth/2)-100 1*ButtonHeight 200 ButtonHeight], ...
            'String', 'Next', ...
            'Callback', @GoNextTab4 , ...
            'Style', 'pushbutton',...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 12);

%   Build the text for the first tab
    Numbers = {'You''ve finished the test!'};
    Numbers1 = {'Your score is'; ...
        '18/30'};

%   Display it
    uicontrol('Style', 'text',...
        'Position', [ round(PanelWidth/2)-400 7*ButtonHeight ...
            round(PanelWidth/4) round(PanelHeight/8) ],...
        'Parent', TabHandles{8,1}, ...
        'string', Numbers,...
        'BackgroundColor', White,...
        'HorizontalAlignment', 'center',...
        'FontName', 'arial',...
        'FontWeight', 'bold',...
        'FontSize', 14);

    uicontrol('Style', 'text',...
        'Position', [ round(PanelWidth/2)-400 6*ButtonHeight ...
            round(PanelWidth/4) round(PanelHeight/8) ],...
        'Parent', TabHandles{8,1}, ...
        'string', Numbers1,...
        'BackgroundColor', White,...
        'HorizontalAlignment', 'center',...
        'FontName', 'arial',...
        'FontWeight', 'bold',...
        'FontSize', 16);
    
chart_image = imread('chart.JPG');        
hImageAxes1 = axes('Parent', TabHandles{8,1}, ...
            'Units', 'pixels', ...
            'Position', [round(PanelWidth/2)-180 PanelHeight/4 ...
                600 300]);
image(chart_image,'Parent', hImageAxes1);
axis off

%% Games
       uicontrol('parent', TabHandles{9,1}, ...
                'Style', 'pushbutton',...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 6.5*ButtonHeight 200 1.5*ButtonHeight], ...
                'String', 'Colour Mix', ...
                'Callback', @GoNextTab5, ...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
        
        uicontrol('parent', TabHandles{9,1}, ...
            'Style', 'pushbutton',...
            'Units', 'pixels', ...
            'Position', [round(PanelWidth/2)-100 4.5*ButtonHeight 200 1.5*ButtonHeight], ...
            'String', 'Sequences', ...
            'Callback', @GoNextTab5, ...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 12);
        
        uicontrol('parent', TabHandles{9,1}, ...
            'Style', 'pushbutton',...
            'Units', 'pixels', ...
            'Position', [round(PanelWidth/2)-100 2.5*ButtonHeight 200 1.5*ButtonHeight], ...
            'String', 'Name the objects', ...
            'Callback', @GoNextTab5, ...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 12);
 
    %   Build the text for the first tab
        Intro = {'Considering your results we suggest you'; ...
            'these games to improve next''s week score'};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 8*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/4) ],...
            'Parent', TabHandles{9,1}, ...
            'string', Intro,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);

%%  Colour

uicontrol('Parent', TabHandles{10,1}, ...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 1.5*ButtonHeight 200 ButtonHeight], ...
                'String', 'Next', ...
                'Callback', @ansbe4nexttab4, ...
                'Style', 'pushbutton',...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
 
    %   Build the text for the first tab
        Intro = {'Push the button of the appropiate colour. Not the Word.'};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 8*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/8) ],...
            'Parent', TabHandles{10,1}, ...
            'string', Intro,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);
        
            %   WORD in colour disp
        uicontrol('Style', 'text',...
            'Position', [round(PanelWidth/2)-35,round(PanelHeight/2),70,40],...
            'Parent', TabHandles{10,1}, ...
            'string',ColW{1},...
            'BackgroundColor', colour{1},...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);
        
        uicontrol('Parent', TabHandles{10,1}, ...
                'Units', 'pixels', ...
                'Position', [round(PanelWidth/2)-100 1.5*ButtonHeight 200 ButtonHeight], ...
                'String', 'Next', ...
                'Callback', @ansbe4nexttab4, ...
                'Style', 'pushbutton',...
                'HorizontalAlignment', 'center',...
                'FontName', 'arial',...
                'FontWeight', 'bold',...
                'FontSize', 12);
            

uicontrol('Style', 'text',...
        'Position', [40,5,70,20],...
        'Parent', TabHandles{10,1}, ...
        'string', 'SCORE:',...
        'BackgroundColor', White,...
        'HorizontalAlignment', 'center',...
        'FontName', 'arial',...
        'FontWeight', 'bold',...
        'FontSize', 14);
    
ANS3= uicontrol('Style', 'text',...
        'Position', [150,5,round(PanelWidth/8),20],...
        'Parent', TabHandles{10,1}, ...
        'string', '2910',...
        'BackgroundColor', White,...
        'HorizontalAlignment', 'center',...
        'FontName', 'arial',...
        'FontWeight', 'bold',...
        'FontSize', 14);

    
       uicontrol('style','pushbutton','Parent',TabHandles{10,1},'units','pixels',...
                'position',[250,round(PanelHeight/2)-100,70,40],'string','White',...
                'callback',@click1);
       uicontrol('style','pushbutton','Parent',TabHandles{10,1},'units','pixels',...
                'position',[320,round(PanelHeight/2)-100,70,40],'string','Black',...
                'callback',@click2);
       uicontrol('style','pushbutton','Parent',TabHandles{10,1},'units','pixels',...
                'position',[390,round(PanelHeight/2)-100,70,40],'string','Blue',...
                'callback',@click3);
       uicontrol('style','pushbutton','Parent',TabHandles{10,1},'units','pixels',...
                'position',[460,round(PanelHeight/2)-100,70,40],'string','Green',...
                'callback',@click4);
       uicontrol('style','pushbutton','Parent',TabHandles{10,1},'units','pixels',...
                'position',[530,round(PanelHeight/2)-100,70,40],'string','Red',...
                'callback',@click5);
       uicontrol('style','pushbutton','Parent',TabHandles{10,1},'units','pixels',...
                'position',[600,round(PanelHeight/2)-100,70,40],'string','Yellow',...
                'callback',@click6);
            
%      score=0;    
     COLOUR='Green';
    function click1(varargin)
       if strcmp(COLOUR,'White')
        score=score+1;
        set(ANS3,'string', num2string(score))
       end
    end

    function click2(varagin)
       if strcmp(COLOUR,'Black')
        score=score+1;
        set(ANS3,'string', num2string(score))
       end
    end
    function click3(varagin)
       if strcmp(COLOUR,'Blue')
        score=score+1;
        
        set(ANS3,'string', num2string(score))
       end
    end
    function click4(varagin)
       if strcmp(COLOUR,'Green')
        score=score+1;
        val=num2string(score);
        set(ANS3,'string', val)
       end
    end
    function click5(varagin)
       if strcmp(COLOUR,'Red')
        score=score+1;
        set(ANS3,'string', num2string(score))
       end
    end
    function click6(varagin)
       if strcmp(COLOUR,'Yellow')
        score=score+1;
        set(ANS3,'string', num2string(score))
       end
    end
       
    

% go next
function ansbe4nexttab4(varargin)
    
    TabSellectCallback(0,0,11);

end

%% Results

        uicontrol('parent', TabHandles{9,1}, ...
            'Style', 'pushbutton',...
            'Units', 'pixels', ...
            'Position', [round(PanelWidth/2)-100 2.5*ButtonHeight 200 1.5*ButtonHeight], ...
            'String', 'Name the objects', ...
            'Callback', @GoNextTab5, ...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 12);
 
    %   Build the text for the first tab
        Intro = {'Considering your results we suggest you'; ...
            'these games to improve next''s week score'};
        
    %   Display it
        uicontrol('Style', 'text',...
            'Position', [ round(PanelWidth/4) 8*ButtonHeight ...
                round(PanelWidth/2) round(PanelHeight/4) ],...
            'Parent', TabHandles{9,1}, ...
            'string', Intro,...
            'BackgroundColor', White,...
            'HorizontalAlignment', 'center',...
            'FontName', 'arial',...
            'FontWeight', 'bold',...
            'FontSize', 14);

%%   Save the TabHandles in guidata
        guidata(hTabFig,TabHandles);

%%   Make Tab 1 active
        TabSellectCallback(0,0,1);

    end

%%   Callback for Tab Selection
function TabSellectCallback(~,~,SelectedTab)
%   All tab selection pushbuttons are greyed out and uipanels are set to
%   visible off, then the selected panel is made visible and it's selection
%   pushbutton is highlighted.

    %   Set up some varables
        TabHandles = guidata(gcf);
        NumberOfTabs = size(TabHandles,1)-2;
        White = TabHandles{NumberOfTabs+2,2};            % White      
        BGColor = TabHandles{NumberOfTabs+2,3};          % Light Grey
        
    %   Turn all tabs off
        for TabCount = 1:NumberOfTabs
            set(TabHandles{TabCount,1}, 'Visible', 'off');
            set(TabHandles{TabCount,2}, 'BackgroundColor', BGColor);
        end
        
    %   Enable the selected tab
        set(TabHandles{SelectedTab,1}, 'Visible', 'on');        
        set(TabHandles{SelectedTab,2}, 'BackgroundColor', White);

end

%% Movement from tab to tab
    function GoNextTab(~,~)
        TabSellectCallback(0,0,2);
    end
    
    function GoNextTab1(~,~)
        TabSellectCallback(0,0,4);
    end
    
    function GoNextTab2(~,~)
        TabSellectCallback(0,0,3);
    end
    
    function GoNextTab3(~,~)
        TabSellectCallback(0,0,5);
    end

    function GoEndTab(~,~)
        TabSellectCallback(0,0,9);
    end
    
    function GoNextTab4(~,~)
        TabSellectCallback(0,0,9);
    end
    
    function GoNextTab5(~,~)
        TabSellectCallback(0,0,10);
    end



    
%% IRENE
    function varargout = Memory1(varargin)
% Memory1 MATLAB code for Memory1.fig
%      Memory1, by itself, creates a new Memory1 or raises the existing
%      singleton*.
%
%      H = Memory1 returns the handle to a new Memory1 or the handle to
%      the existing singleton*.
%
%      Memory1('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in Memory1.M with the given input arguments.
%
%      Memory1('Property','Value',...) creates a new Memory1 or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before Memory1_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to Memory1_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help Memory1

% Last Modified by GUIDE v2.5 17-Mar-2018 17:32:13

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @Memory1_OpeningFcn, ...
                   'gui_OutputFcn',  @Memory1_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT
    end


% --- Executes just before Memory1 is made visible.
function Memory1_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to Memory1 (see VARARGIN)

% Choose default command line output for Memory1
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes Memory1 wait for user response (see UIRESUME)
% uiwait(handles.figure1);
end


% --- Outputs from this function are returned to the command line.
function varargout = Memory1_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;
end


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
end
